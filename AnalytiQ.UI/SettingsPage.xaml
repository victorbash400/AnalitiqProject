<Page x:Class="AnalytiQ.UI.SettingsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:AnalytiQ.UI"
      mc:Ignorable="d" 
      d:DesignHeight="650" d:DesignWidth="800"
      Title="Settings">

    <Page.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <!-- Improved Color Scheme (Adjusted to work with #1E1E2E) -->
        <Color x:Key="DarkBackgroundValue">#1A1A2A</Color>
        <Color x:Key="CardBackgroundValue">#22222F</Color>
        <Color x:Key="ContentBackgroundValue">#2A2A38</Color>
        <Color x:Key="BorderValue">#383850</Color>
        <Color x:Key="TextPrimaryValue">#FFFFFF</Color>
        <Color x:Key="TextMutedValue">#BBBBCC</Color>
        <Color x:Key="AccentValue">#3CBFAE</Color>
        <Color x:Key="AccentHoverValue">#4FD0BF</Color>
        <Color x:Key="AccentLightValue">#3CBFAE20</Color>
        <Color x:Key="WarningValue">#FF5C78</Color>

        <!-- Brushes -->
        <SolidColorBrush x:Key="DarkBackground" Color="{StaticResource DarkBackgroundValue}"/>
        <SolidColorBrush x:Key="CardBackground" Color="{StaticResource CardBackgroundValue}"/>
        <SolidColorBrush x:Key="ContentBackground" Color="{StaticResource ContentBackgroundValue}"/>
        <SolidColorBrush x:Key="Border" Color="{StaticResource BorderValue}"/>
        <SolidColorBrush x:Key="TextPrimary" Color="{StaticResource TextPrimaryValue}"/>
        <SolidColorBrush x:Key="TextMuted" Color="{StaticResource TextMutedValue}"/>
        <SolidColorBrush x:Key="Accent" Color="{StaticResource AccentValue}"/>
        <SolidColorBrush x:Key="AccentHover" Color="{StaticResource AccentHoverValue}"/>
        <SolidColorBrush x:Key="AccentLight" Color="{StaticResource AccentLightValue}"/>
        <SolidColorBrush x:Key="Warning" Color="{StaticResource WarningValue}"/>

        <!-- Improved Gradients -->
        <LinearGradientBrush x:Key="BackgroundGradient" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#1A1A2A" Offset="0"/>
            <GradientStop Color="#22222F" Offset="1"/>
        </LinearGradientBrush>

        <!-- Button Styles -->
        <Style x:Key="PrimaryButton" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource Accent}"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="Padding" Value="16,0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                                CornerRadius="6" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource AccentHover}" TargetName="border"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#2D9082" TargetName="border"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#444444" TargetName="border"/>
                                <Setter Property="Foreground" Value="#777777"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SecondaryButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource Accent}"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource Accent}"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="Padding" Value="16,0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource AccentLight}" TargetName="border"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#3CBFAE30" TargetName="border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="IconButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="32"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                                CornerRadius="4" Padding="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#383850" TargetName="border"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#25253A" TargetName="border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Card Style -->
        <Style x:Key="Card" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource CardBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="Margin" Value="0,0,0,16"/>
            <Setter Property="Padding" Value="20"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="10" ShadowDepth="2" Opacity="0.25" Direction="315" Color="#121220"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Text Styles -->
        <Style x:Key="SectionHeader" TargetType="TextBlock">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="{StaticResource Accent}"/>
            <Setter Property="Margin" Value="0,0,0,12"/>
        </Style>

        <Style x:Key="FormLabel" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{StaticResource TextMuted}"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Margin" Value="0,0,12,0"/>
        </Style>

        <!-- Text Box Style -->
        <Style x:Key="TextInput" TargetType="TextBox">
            <Setter Property="Padding" Value="12,6"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource Border}"/>
            <Setter Property="Background" Value="{StaticResource ContentBackground}"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="38"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="Border" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6">
                            <ScrollViewer x:Name="PART_ContentHost" Padding="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Accent}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Accent}"/>
                                <Setter TargetName="Border" Property="BorderThickness" Value="1.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Improved Product List Box Style -->
        <Style x:Key="ProductList" TargetType="ListBox">
            <Setter Property="Background" Value="{StaticResource ContentBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8">
                            <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="False">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Improved Product List Item Style -->
        <Style x:Key="ProductListItem" TargetType="ListBoxItem">
            <Setter Property="Padding" Value="16,10"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="BorderBrush" Value="{StaticResource Border}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="ItemBorder" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <!-- Product Icon -->
                                <Border Grid.Column="0" Width="28" Height="28" 
                                        Background="{StaticResource AccentLight}"
                                        CornerRadius="6" Margin="0,0,12,0">
                                    <TextBlock Text="📦" FontSize="14" 
                                               HorizontalAlignment="Center" 
                                               VerticalAlignment="Center"/>
                                </Border>

                                <!-- Product Name -->
                                <TextBlock Grid.Column="1" Text="{Binding}" 
                                           VerticalAlignment="Center"
                                           FontSize="13"/>

                                <!-- Remove Button -->
                                <Button x:Name="RemoveButton" Grid.Column="2" 
                                        Style="{StaticResource IconButton}"
                                        Visibility="Collapsed"
                                        Tag="{Binding}"
                                        Width="26" Height="26"
                                        Click="RemoveProduct_Click"
                                        ToolTip="Remove product">
                                    <Border Background="#FF4C67" CornerRadius="4" Width="18" Height="18">
                                        <TextBlock Text="×" FontSize="14" FontWeight="Bold" 
                                                   HorizontalAlignment="Center" 
                                                   VerticalAlignment="Center"
                                                   Foreground="White"/>
                                    </Border>
                                </Button>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#32324A" TargetName="ItemBorder"/>
                                <Setter Property="Visibility" Value="Visible" TargetName="RemoveButton"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#383857" TargetName="ItemBorder"/>
                                <Setter Property="Visibility" Value="Visible" TargetName="RemoveButton"/>
                            </Trigger>
                            <!-- Last item should not have a bottom border -->
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}, Path=Items.Count}" Value="1">
                                <Setter Property="BorderThickness" Value="0"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=PreviousData}}" Value="{x:Null}">
                                <Setter Property="BorderThickness" Value="0"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Empty State Style -->
        <Style x:Key="EmptyStateMessage" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource TextMuted}"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0,16"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>
    </Page.Resources>

    <Border Background="{StaticResource BackgroundGradient}" CornerRadius="12" Margin="10">
        <Grid>
            <TextBlock x:Name="lblAuthWarning" 
                       Text="Authentication required. Please sign in to access settings." 
                       Foreground="{StaticResource Warning}" 
                       FontWeight="SemiBold" 
                       FontSize="13"
                       HorizontalAlignment="Center" 
                       VerticalAlignment="Top" 
                       Margin="0,12,0,0" 
                       Visibility="Collapsed"/>

            <ScrollViewer x:Name="MainScrollViewer" VerticalScrollBarVisibility="Auto" Padding="24,16,24,32">
                <StackPanel>
                    <!-- Tenant Info Section -->
                    <TextBlock Text="Tenant Information" Style="{StaticResource SectionHeader}"/>
                    <Border Style="{StaticResource Card}">
                        <Grid x:Name="pnlTenantSettings">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="120"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" Text="Tenant ID:" Style="{StaticResource FormLabel}"/>
                            <TextBox Grid.Row="0" Grid.Column="1" x:Name="txtTenantId" Style="{StaticResource TextInput}" 
                                     IsReadOnly="True" Margin="0,0,0,12"/>
                            <TextBlock Grid.Row="1" Grid.Column="0" Text="Company Name:" Style="{StaticResource FormLabel}"/>
                            <TextBox Grid.Row="1" Grid.Column="1" x:Name="txtTenantName" Style="{StaticResource TextInput}" 
                                     IsReadOnly="True" Margin="0,0,0,12"/>
                            <TextBlock Grid.Row="2" Grid.Column="0" Text="Admin Email:" Style="{StaticResource FormLabel}"/>
                            <TextBox Grid.Row="2" Grid.Column="1" x:Name="txtAdminEmail" Style="{StaticResource TextInput}" 
                                     IsReadOnly="True"/>
                            <Button Grid.Row="0" Grid.Column="2" Grid.RowSpan="3" 
                                    Content="Refresh" Style="{StaticResource PrimaryButton}" 
                                    x:Name="btnRefreshTenantInfo" VerticalAlignment="Top" Width="80"/>
                        </Grid>
                    </Border>

                    <!-- Improved Product Catalog Section -->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Text="Product Catalog" Style="{StaticResource SectionHeader}"/>
                        <TextBlock Grid.Column="1" x:Name="txtProductCount" Text="0 products" 
                                  Foreground="{StaticResource TextMuted}" VerticalAlignment="Center"
                                  FontSize="12" Margin="0,0,0,12"/>
                    </Grid>

                    <Border Style="{StaticResource Card}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <!-- Product List Header -->
                            <Border Grid.Row="0" Background="#32324A" 
                                   BorderThickness="0" CornerRadius="6" 
                                   Padding="16,8" Margin="0,0,0,8">
                                <Grid>
                                    <TextBlock Text="Available Products" 
                                              Foreground="{StaticResource TextPrimary}" 
                                              FontWeight="Medium" FontSize="13"/>
                                </Grid>
                            </Border>

                            <!-- Product List -->
                            <Grid Grid.Row="1">
                                <ListBox x:Name="lstProducts" Style="{StaticResource ProductList}" 
                                         ItemContainerStyle="{StaticResource ProductListItem}" 
                                         MinHeight="150" MaxHeight="250"/>

                                <!-- Empty state message -->
                                <TextBlock x:Name="txtEmptyProducts" Style="{StaticResource EmptyStateMessage}"
                                           Text="No products added yet. Add your first product below."
                                           Visibility="{Binding ElementName=lstProducts, Path=HasItems, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=inverse}"/>
                            </Grid>

                            <!-- Add Product Section -->
                            <Border Grid.Row="2" BorderThickness="0,1,0,0" 
                                   BorderBrush="{StaticResource Border}" 
                                   Padding="0,16,0,0" Margin="0,16,0,0">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Row="0" Text="Add New Product" 
                                              Foreground="{StaticResource TextMuted}" 
                                              FontWeight="Medium" Margin="0,0,0,8"/>

                                    <Grid Grid.Row="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <TextBox Grid.Column="0" x:Name="txtNewProduct" Style="{StaticResource TextInput}" 
             Margin="0,0,12,0">
                                            <TextBox.Resources>
                                                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextInput}">
                                                    <Style.Triggers>
                                                        <Trigger Property="Text" Value="">
                                                            <Setter Property="Background">
                                                                <Setter.Value>
                                                                    <VisualBrush TileMode="None" Stretch="None" AlignmentX="Left">
                                                                        <VisualBrush.Visual>
                                                                            <TextBlock Text="Enter product name" Foreground="#808080" Margin="12,6,0,0"/>
                                                                        </VisualBrush.Visual>
                                                                    </VisualBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBox.Resources>
                                        </TextBox>

                                        <Button Grid.Column="1" Content="Add Product" Style="{StaticResource PrimaryButton}" 
            x:Name="btnAddProduct" Width="120"/>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                </StackPanel>
            </ScrollViewer>
        </Grid>
    </Border>
</Page>